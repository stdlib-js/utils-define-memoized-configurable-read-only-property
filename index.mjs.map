{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-object';\nimport isFunction from '@stdlib/assert-is-function';\nimport defineMemoizedProperty from '@stdlib/utils-define-memoized-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Defines a configurable memoized read-only object property.\n*\n* ## Notes\n*\n* -   Configurable read-only properties are **enumerable**.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Function} fcn - function whose return value will be memoized and set as the property value\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be a function\n*\n* @example\n* var obj = {};\n*\n* function foo() {\n*     return 'bar';\n* }\n*\n* setMemoizedConfigurableReadOnly( obj, 'foo', foo );\n*\n* var v = obj.foo;\n* // returns 'bar'\n*/\nfunction setMemoizedConfigurableReadOnly( obj, prop, fcn ) { // eslint-disable-line id-length\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( '1Sf3L', obj ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( '1Sf3N', fcn ) );\n\t}\n\tdefineMemoizedProperty( obj, prop, {\n\t\t'configurable': true,\n\t\t'enumerable': true,\n\t\t'writable': false,\n\t\t'value': fcn\n\t});\n}\n\n\n// EXPORTS //\n\nexport default setMemoizedConfigurableReadOnly;\n"],"names":["setMemoizedConfigurableReadOnly","obj","prop","fcn","isObject","TypeError","format","isFunction","defineMemoizedProperty","configurable","enumerable","writable","value"],"mappings":";;kYAuDA,SAASA,EAAiCC,EAAKC,EAAMC,GACpD,IAAMC,EAAUH,GACf,MAAM,IAAII,UAAWC,EAAQ,QAASL,IAEvC,IAAMM,EAAYJ,GACjB,MAAM,IAAIE,UAAWC,EAAQ,QAASH,IAEvCK,EAAwBP,EAAKC,EAAM,CAClCO,cAAgB,EAChBC,YAAc,EACdC,UAAY,EACZC,MAAST,GAEX"}